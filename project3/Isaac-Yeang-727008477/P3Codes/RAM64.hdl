// ISAAC YEANG : 727008477

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    // select a ram16 chip to update
    DMux(in=load, sel=address[5], a=load01, b=load23);
    DMux(in=load01, sel=address[4], a=load0, b=load1);
    DMux(in=load23, sel=address[4], a=load2, b=load3);

    // do updating/outputting
    RAM16(in=in, address=address[0..3], load=load0, out=R1);
    RAM16(in=in, address=address[0..3], load=load1, out=R2);
    RAM16(in=in, address=address[0..3], load=load2, out=R3);
    RAM16(in=in, address=address[0..3], load=load3, out=R4);

    // output correct result
    Mux16(a=R1, b=R2, sel=address[4], out=R12);
    Mux16(a=R3, b=R4, sel=address[4], out=R34);
    Mux16(a=R12, b=R34, sel=address[5], out=out);
}